#+PROPERTY: header-args:bash :exports both :eval never-export
#+TITLE: Clang vs. GCC for building Emacs
#+AUTHOR: Lei Zhao
#+HTML_HEAD: <link type="text/css" href="../styles/syntax-highlight.css" rel="stylesheet"/>
#+HTML_HEAD: <link type="text/css" href="../styles/layout.css" rel="stylesheet"/>
#+HTML_HEAD: <script type="text/javascript" src="../src/post.js"></script>
#+OPTIONS: ':t


Several days ago, I tried to play with Web Assembly and found out it
requires Clang to run.  Clang has become the default compiler for many
BSD-based operating systems.  And I was told from multiple sources
that it is faster than GCC both in compilation time and binary speed.
However, I had no personal experience with it and thus set out to gain
some.

I am no expert in performance testing, so don't blame me if I made
mistakes.  I used the Bash builtin keyword ~time~ to obtain time
comsumed by the building process.  I add the 


#+BEGIN_SRC bash
  time make CC=clang CFLAGS='-g3 -O2 -rtlib=compiler-rt' bootstrap
#+END_SRC

#+RESULTS:
| real | 10m44.643s |
| user | 9m40.844s  |
| sys  | 0m28.492s  |

time make check

real	2m6.082s
user	0m34.968s
sys	0m4.656s

time make bootstrap

real	10m39.673s
user	9m47.504s
sys	0m25.528s

time make check

real	2m3.138s
user	0m33.844s
sys	0m4.332s

time make CC=clang LDFLAGS='-rtlib=compiler-rt' bootstrap

real	10m21.240s
user	9m27.012s
sys	0m27.908s

time make check

real	2m5.838s
user	0m35.584s
sys	0m4.636s

time make CC=clang LDFLAGS='-fuse-ld=lld -rtlib=compiler-rt' bootstrap

real	10m5.253s
user	9m12.172s
sys	0m27.560s

time make check

real	2m0.545s
user	0m31.992s
sys	0m4.380s

Second Day

time make CC=clang LDFLAGS='-fuse-ld=lld -rtlib=compiler-rt' bootstrap

real	9m25.487s
user	8m38.408s
sys	0m24.996s

time make bootstrap

real	9m59.694s
user	9m10.776s
sys	0m24.756s

time make CC=clang LDFLAGS='-fuse-ld=lld -rtlib=compiler-rt' bootstrap

real	9m47.568s
user	8m58.880s
sys	0m26.516s

time make bootstrap

real	9m52.320s
user	9m5.648s
sys	0m23.000s
